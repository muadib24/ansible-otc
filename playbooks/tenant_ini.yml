---
- hosts: localhost
  gather_facts: no
  vars:
    tenant_ini: "vars/tenant.ini"
    
    # Common defaults
    ecs_defaults: "{{ lookup('ini', 'DEFAULT section=DEFAULT file={{ tenant_ini }}') }}"
    evs_defaults: "{{ lookup('ini', 'DEFAULT section=DEFAULT file={{ tenant_ini }}') }}"
    elb_defaults: "{{ lookup('ini', 'DEFAULT section=DEFAULT file={{ tenant_ini }}') }}"
    listener_defaults: "{{ lookup('ini', 'DEFAULT section=DEFAULT file={{ tenant_ini }}') }}"
    dns_defaults: "{{ lookup('ini', 'DEFAULT section=DEFAULT file={{ tenant_ini }}') }}"
    rds_defaults: "{{ lookup('ini', 'DEFAULT section=DEFAULT file={{ tenant_ini }}') }}"

    # ECS vars
    ecs_vars: "{{ lookup('ini', '{{ ecs_name }} section=DEFAULT file={{ tenant_ini }}') | combine(ecs_defaults, recursive=True) }}"
    availability_zone: "{{ ecs_vars['availability_zone'] }}"
    ecs_adminkey: "{{ ecs_vars['ecs_adminkey'] }}"
    ecs_volumesize: "{{ ecs_vars['ecs_volumesize'] }}"
    ecs_volumetype: "{{ ecs_vars['ecs_volumetype'] }}"
    ecs_ram: "{{ ecs_vars['ecs_ram'] }}"
    ecs_vcpus: "{{ ecs_vars['ecs_vcpus'] }}"
    ecs_ipaddress: "{{ ecs_vars['ecs_ipaddress'] }}"
    public_ip_address: "{{ ecs_vars['ecs_publicip'] }}"
    ptr_name: "{{ ecs_vars['ecs_publicfqdn'] }}"
    ttl: "{{ ecs_vars['ecs_publicttl'] }}"
    eip_bandwidth_name: "{{ ecs_vars['eip_bandwidth_name'] }}"
    eip_bandwidth_size: "{{ ecs_vars['eip_bandwidth_size'] }}"
    image_name: "{{ ecs_vars['image_name'] }}"
    keypair_file: "{{ ecs_vars['keypair_file'] }}"
    secgroups: "{{ ecs_vars['secgroups'] }}"
    secgrouprules: "{{ lookup('ini', '{{ secgroup_name }} section=securitygroups file={{ tenant_ini }}') }}"
    subnet_name: "{{ ecs_vars['subnet_name'] }}"
    subnet_net: "{{ ecs_vars['subnet_net'] }}"
    subnet_gateway: "{{ ecs_vars['subnet_gateway'] }}"
    subnet_dhcp_enable: "{{ ecs_vars['subnet_dhcp_enable'] }}"
    subnet_primary_dns: "{{ ecs_vars['subnet_primary_dns'] }}"
    subnet_secondary_dns: "{{ ecs_vars['subnet_secondary_dns'] }}"
    vpc_name: "{{ ecs_vars['vpc_name'] }}"
    vpc_net: "{{ ecs_vars['vpc_net'] }}"

    # EVS vars
    evs_vars: "{{ lookup('ini', '{{ evs_name }} section=DEFAULT file={{ tenant_ini }}') | combine(evs_defaults, recursive=True) }}"
    evs_availability_zone: "{{ evs_vars['evs_availability_zone'] }}"
    evs_volume_type: "{{ evs_vars['evs_volume_type'] }}"
    evs_size: "{{ evs_vars['evs_size'] }}"
    evs_multiattach: "{{ evs_vars['evs_multiattach'] }}"
    evs_scsi: "{{ evs_vars['evs_scsi'] }}"

    # ELB vars
    elb_vars: "{{ lookup('ini', '{{ elb_name }} section=DEFAULT file={{ tenant_ini }}') | combine(elb_defaults, recursive=True) }}"
    admin_state_up: "{{ elb_vars['admin_state_up'] }}"
    elb_availability_zone: "{{ elb_vars['elb_availability_zone'] }}"
    elb_bandwidth: "{{ elb_vars['elb_bandwidth'] }}"
    elb_type: "{{ elb_vars['elb_type'] }}"
    elb_secgroup_name: "{{ elb_vars['elb_secgroup_name'] }}"
    elb_subnet_name: "{{ elb_vars['elb_subnet_name'] }}"
    elb_vpc_name: "{{ elb_vars['elb_vpc_name'] }}"

    # ELB listener vars
    listener_vars: "{{ lookup('ini', '{{ listener_name }} section=DEFAULT file={{ tenant_ini }}') | combine(listener_defaults, recursive=True) }}"
    listener_protocol: "{{ listener_vars['listener_protocol'] }}"
    listener_port: "{{ listener_vars['listener_port'] }}"
    listener_backend_protocol: "{{ listener_vars['listener_backend_protocol'] }}"
    listener_backend_port: "{{ listener_vars['listener_backend_port'] }}"
    listener_lb_algorithm: "{{ listener_vars['listener_lb_algorithm'] }}"
    listener_certificate_name: "{{ listener_vars.get('listener_certificate_name', '') }}"
    listener_tcp_timeout: "{{ listener_vars.get('listener_tcp_timeout', '') }}"
    listener_cookie_timeout: "{{ listener_vars.get('listener_cookie_timeout', '') }}"
    listener_sticky_session_type: "{{ listener_vars.get('listener_sticky_session_type', '') }}"
    listener_session_sticky: "{{ listener_vars.get('listener_session_sticky', '') }}"

    # ELB healthcheck vars
    healthcheck_connect_port: "{{ listener_vars['healthcheck_connect_port'] }}"
    healthcheck_interval: "{{ listener_vars['healthcheck_interval'] }}"
    healthcheck_protocol: "{{ listener_vars['healthcheck_protocol'] }}"
    healthcheck_timeout: "{{ listener_vars.get('healthcheck_timeout', 0) }}"
    healthcheck_uri: "{{ listener_vars.get('healthcheck_uri', '') }}"
    unhealthy_threshold: "{{ listener_vars.get('unhealthy_threshold', 0) }}"
    backend_members: "{{ listener_vars.get('backend_members', '') }}"

    # DNS vars
    dns_vars: "{{ lookup('ini', '{{ zone_name }} section=DEFAULT file={{ tenant_ini }}') | combine(dns_defaults, recursive=True) }}"
    zone_description: "{{ dns_vars['zone_description'] }}"
    zone_type: "{{ dns_vars['zone_type'] }}"
    zone_email: "{{ dns_vars['zone_email'] }}"
    zone_ttl: "{{ dns_vars['zone_ttl'] }}"
    zone_records: "{{ dns_vars.get('zone_records', '') }}"

    # RDS vars
    rds_vars: "{{ lookup('ini', '{{ rds_name }} section=DEFAULT file={{ tenant_ini }}') | combine(rds_defaults, recursive=True) }}"
    rds_availability_zone: "{{ rds_vars['rds_availability_zone'] }}"
    rds_vpc_name: "{{ rds_vars['rds_vpc_name'] }}"
    rds_secgroup_name: "{{ rds_vars['rds_secgroup_name'] }}"
    rds_subnet_name: "{{ rds_vars['rds_subnet_name'] }}"
    rds_type: "{{ rds_vars['rds_type'] }}"
    rds_version: "{{ rds_vars['rds_version'] }}"
    rds_root_password: "{{ rds_vars['rds_root_password'] }}"
    rds_port: "{{ rds_vars['rds_port'] }}"
    rds_ram: "{{ rds_vars['rds_ram'] }}"
    rds_volume_type: "{{ rds_vars['rds_volume_type'] }}"
    rds_volume_size: "{{ rds_vars['rds_volume_size'] }}"
    rds_backup_time: "{{ rds_vars['rds_backup_time'] }}"
    rds_backup_days: "{{ rds_vars['rds_backup_days'] }}"
    rds_ha_enabled: "{{ rds_vars['rds_ha_enabled'] }}"
    rds_ha_replication_mode: "{{ rds_vars['rds_ha_replication_mode'] }}"

    # Playbook action
    localaction: "create"

  roles:
    # VM creation
    - role: "otc_auth"
    - role: "otc_vpc"
    - role: "otc_subnet"
    - role: "otc_secgroup"
    - role: "otc_keypair"
    - role: "otc_eip"
    - role: "otc_ecs"
    - role: "otc_dns"
      vars:
        localaction: "ptrcreate"

    # Internal DNS zone
    - role: "otc_vpc"
      vars:
        localaction: "router"
    - role: "otc_dns"
      vars:
        localaction: "create"
